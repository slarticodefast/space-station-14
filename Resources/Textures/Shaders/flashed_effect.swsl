// progress of the status effect
// between 0 and 1
uniform highp float percentComplete;
// How fast to do the rotating motion.
// 1 for normal effect.
// 0 for the reduced motion setting.
uniform highp float timeScale;
// starting phase for the rotation effect
// needed so it doesn't always look the same for 0 motion
uniform highp float phase;
const highp float fadeFalloffExp = 8.0;

void fragment() {
    // Higher exponent -> stronger blinding effect
    highp float remaining = -pow(percentComplete, fadeFalloffExp) + 1.0;

    // Two ghost textures that spin around the character
    highp float time = TIME * timeScale + phase;
    highp vec4 tex1 = zTexture(vec2(UV.x + (0.02) * sin(time * 3.0), UV.y + (0.02) * cos(time * 3.0)));
    highp vec4 tex2 = zTexture(vec2(UV.x + (0.01) * sin(time * 2.0), UV.y + (0.01) * cos(time * 2.0)));

    highp vec4 textureMix = mix(tex1, tex2, 0.5);

    // Gradually mixes between the texture mix and a full-black texture, causing the "blinding" effect
    highp vec4 mixed = mix(vec4(0.0, 0.0, 0.0, 1.0), textureMix, percentComplete);

    COLOR = vec4(mixed.rgb, remaining);
}
